rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        (request.auth.token.admin == true || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Properties collection
    match /properties/{propertyId} {
      allow read;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid || isAdmin()
      );
      allow delete: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid || isAdmin()
      );
    }
    
    // Admin-only collections
    match /admin_logs/{logId} {
      allow read, write: if isAdmin();
    }
    
    match /admin/dashboard {
      allow read, write: if isAdmin();
    }
    
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Public collections
    match /public/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
